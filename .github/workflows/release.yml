name: Release Baby Care App

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual triggers
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

env:
  FLUTTER_VERSION: '3.35.4'
  JAVA_VERSION: '17'

jobs:
  # Create GitHub Release
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Generate changelog
        id: changelog
        run: |
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "## What's New in ${{ steps.get_version.outputs.version }}" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### 🍼 Features" >> $GITHUB_OUTPUT
          echo "- Feeding timer with duration tracking" >> $GITHUB_OUTPUT
          echo "- One-tap urine and stool logging" >> $GITHUB_OUTPUT
          echo "- Daily history view and editing" >> $GITHUB_OUTPUT
          echo "- Smart feeding reminders (2h + 3h)" >> $GITHUB_OUTPUT
          echo "- Export daily files for doctors" >> $GITHUB_OUTPUT
          echo "- Beautiful pink & white cartoon UI" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### 📱 Downloads" >> $GITHUB_OUTPUT
          echo "- **Android APK**: For direct installation" >> $GITHUB_OUTPUT
          echo "- **Android AAB**: For Google Play Store" >> $GITHUB_OUTPUT
          echo "- **Web Version**: Available at [GitHub Pages]" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### 💾 Data Storage" >> $GITHUB_OUTPUT
          echo "- Local file storage (privacy-first)" >> $GITHUB_OUTPUT
          echo "- Human-readable text format" >> $GITHUB_OUTPUT
          echo "- Easy doctor sharing" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Baby Care App ${{ steps.get_version.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false

  # Build and upload Android
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Download assets
        run: |
          chmod +x scripts/download_assets.sh
          ./scripts/download_assets.sh

      - name: Get dependencies
        run: flutter pub get

      # Ensure Android v2 embedding is configured to prevent build failures
      - name: Ensure Android v2 Embedding
        run: |
          MANIFEST="android/app/src/main/AndroidManifest.xml"
          if grep -q 'android:name="flutterEmbedding"' $MANIFEST; then
            if ! grep -q 'android:value="2"' $MANIFEST; then
              echo "Updating Android embedding from v1 to v2"
              sed -i.bak 's/android:value="1"/android:value="2"/g' $MANIFEST
            fi
          else
            echo "Adding Android embedding v2 configuration"
            sed -i.bak '/<\/application>/i\        <meta-data\n            android:name="flutterEmbedding"\n            android:value="2" \/>' $MANIFEST
          fi

      - name: Setup Android signing
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > android/app/keystore.jks
          echo "storeFile=keystore.jks" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
          echo "storePassword=${{ secrets.ANDROID_STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties

      - name: Build release APK
        run: flutter build apk --release --split-per-abi

      - name: Build release AAB
        run: flutter build appbundle --release

      - name: Upload artifacts to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/app/outputs/flutter-apk/*.apk
            build/app/outputs/bundle/release/*.aab